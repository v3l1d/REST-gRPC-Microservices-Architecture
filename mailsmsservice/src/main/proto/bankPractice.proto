syntax="proto3";
package com.thesis.generated;
option java_multiple_files=true;
import "userData.proto";

message Date{
    int32 year=1;
    int32 month=2;
    int32 day=3;
}

message VehicleInfo {
    string vehicleId = 1;
    string brand = 2;
    string model = 3;
    int32 year = 4;
}


message AdditionalInfo {
    string job = 1;
    string gender = 2;
    Date dateOfBirth = 3;
    string province=4;
    string taxCode=5;
}

message PersonalDocument{
    string documentId=1;
    string documentType=2;
    Date expireDate=3;
}


message FinancingInfo {
    string financingId = 1;
    string vehicleId = 2;
    double loanAmount = 3;
    double loanTerm = 4;
}

message CardPaymentInfo {
    string owner = 1;
    string cardNumber = 2;
    string code = 3;
    Date expireDate = 4;
}

message BankTransferInfo {

    string owner=1;
    string bankId = 2;
}

// Define PaymentInfo as a oneof to represent either card payment or bank transfer.
message PaymentInfo {
    oneof payment_method {
        CardPaymentInfo card_payment = 1;
        BankTransferInfo bank_transfer = 2;
    }
}

message Practice {
    string practiceId = 1;
    string status = 2;
    string name = 3;
    string surname = 4;
    string email = 5;
    string phone = 6;
    PaymentInfo paymentInfo = 7;
    AdditionalInfo additionalInfo = 8;
    FinancingInfo financingInfo = 9;
    VehicleInfo vehicleInfo = 10;
    PersonalDocument personalDocument=11;
    string creditDocument=12;
    UserData userData=13;

}

message PracticeResponse{
    string status=1;
    string practiceId=2;
    Practice practice=3;
    string evaluationResult=4;
}

service Banking{
    rpc CreatePractice(Practice) returns (PracticeResponse);
    rpc AddInfoPractice(Practice) returns (PracticeResponse);
    rpc PayInfoPractice(Practice) returns (PracticeResponse);
    rpc DocumentInfoPractice(Practice) returns (PracticeResponse);
    rpc UserData(Practice) returns (PracticeResponse);
    rpc CreditDocInfoPractice(Practice) returns (PracticeResponse);
    rpc PracticeExists(Practice) returns (PracticeResponse);
    rpc SendToEvaluation(Practice) returns (PracticeResponse);
    rpc SetUserData(Practice) returns (PracticeResponse);
    rpc PracticeReview(Practice) returns (Practice);

}